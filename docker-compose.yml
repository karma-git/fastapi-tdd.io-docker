---
version: '3.8'

services:
  web:
    container_name: tdd.io-fastapi
    image: tdd.io-fastapi
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        - POETRY_VERSION=1.1.12
    ports:
      - "8000:8000"
    volumes:
      - ./project:/usr/src/app
    environment:
      - ENVIRONMENT=dev
      - TESTING=0
      - DATABASE_URL=postgres://postgres:postgres@web-db:5432/web_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@web-db:5432/web_test
    depends_on:
      web-db:
        condition: service_healthy
  web-prod:
    container_name: tdd.io-fastapi-prod
    # !NOTE: I embrace the risk with the latest tag here
#    image: "registry.heroku.com/mighty-brook-75156/web:latest"
#    image: "docker.pkg.github.com/karma-git/fastapi-tdd.io-docker/summarizer:latest"  # GitHub
    image: "registry.gitlab.com/web352/fastapi/fastapi-tdd.io-docker:latest"  # GitLab
    build:
      context: ./
      dockerfile: Dockerfile.prod
      args:
        - POETRY_VERSION=1.1.12
    ports:
      - "8001:8001"
    volumes:
      - ./project:/usr/src/app
    environment:
      - PORT=8001
      - DATABASE_URL=postgres://postgres:postgres@web-db:5432/web_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@web-db:5432/web_test
    depends_on:
      web-db:
        condition: service_healthy
  web-db:
    container_name: tdd.io-postgres
    image: tdd.io-postgres
    user: postgres
    build:
      context: ./project/db
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 2s
      timeout: 2s
      retries: 30
